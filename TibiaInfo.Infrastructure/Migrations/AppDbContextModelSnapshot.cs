// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TibiaInfo.Infrastructure.Context;

namespace TibiaInfo.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("TibiaInfo.Core.Models.CharacterHuntingInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Damage")
                        .HasColumnType("REAL");

                    b.Property<double>("Healing")
                        .HasColumnType("REAL");

                    b.Property<double>("PersonalBalance")
                        .HasColumnType("REAL");

                    b.Property<double>("PersonalLoot")
                        .HasColumnType("REAL");

                    b.Property<double>("PersonalSupplies")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("CharacterHuntingInfos");
                });

            modelBuilder.Entity("TibiaInfo.Core.Models.HuntingInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<double>("Loot")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Session")
                        .HasColumnType("TEXT");

                    b.Property<double>("Supplies")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("HuntingInfos");
                });

            modelBuilder.Entity("TibiaInfo.Core.Models.Huntings", b =>
                {
                    b.Property<Guid>("TibiaCharacterId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CharacterHuntingInfoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HuntingInfoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("TibiaCharacterId", "CharacterHuntingInfoId", "HuntingInfoId");

                    b.HasIndex("CharacterHuntingInfoId");

                    b.HasIndex("HuntingInfoId");

                    b.ToTable("Huntings");
                });

            modelBuilder.Entity("TibiaInfo.Core.Models.TibiaCharacter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountStatus")
                        .HasColumnType("TEXT");

                    b.Property<int>("AchievementPoints")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoyaltyTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Residence")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("World")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TibiaCharacters");
                });

            modelBuilder.Entity("TibiaInfo.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TibiaInfo.Core.Models.Huntings", b =>
                {
                    b.HasOne("TibiaInfo.Core.Models.CharacterHuntingInfo", "CharacterHuntingInfo")
                        .WithMany("Huntings")
                        .HasForeignKey("CharacterHuntingInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TibiaInfo.Core.Models.HuntingInfo", "HuntingInfo")
                        .WithMany("Huntings")
                        .HasForeignKey("HuntingInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TibiaInfo.Core.Models.TibiaCharacter", "TibiaCharacter")
                        .WithMany("Huntings")
                        .HasForeignKey("TibiaCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TibiaInfo.Core.Models.TibiaCharacter", b =>
                {
                    b.HasOne("TibiaInfo.Core.Models.User", "User")
                        .WithMany("TibiaCharacters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
